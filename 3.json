{
      "parameters": {
        "jsCode": "// Error logging for debugging\nif ($json.error) {\n  console.error('Workflow Error:', $json.error);\n  return [{json: {error: $json.error, timestamp: new Date().toISOString()}}];\n}\nreturn [];"
      },
      "id": "error-handler-1",
      "name": "Error Handler",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [2380, 600],
      "continueOnFail": true
    },    {
      "parameters": {},
      "id": "delay-node-1",
      "name": "Wait 2 Seconds",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1780, 320],
      "webhookId": "delay-webhook-1"
    },{
  "name": "Reddit Automation with AI Response",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "daysInterval": 1
            }
          ]
        },
        "triggerTimes": {
          "item": [
            {
              "hour": 9,
              "minute": 0
            }
          ]
        }
      },
      "id": "d9bae984-2ce7-4f6b-ab53-527ac9dfea3d",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [680, 320]
    },
    {
      "parameters": {
        "subreddit": "IndiaMentalHealth+Psychology_India+IndianGymRats+AskFitnessIndia+TwoXIndia+IndiaCareers+Indian_Academia+developersIndia+IndianWorkplace+cscareerquestions+india+AskIndia+indiasocial+bangalore+Chennai",
        "operation": "search",
        "keyword": "mental health OR wellness OR career OR fitness OR workplace",
        "additionalFields": {
          "sort": "new",
          "limit": 100
        }
      },
      "id": "32ecf73c-b6e9-4bd6-9ecc-d82c4c50d7b5",
      "name": "Reddit Multi-Subreddit Search",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [880, 320],
      "credentials": {
        "redditOAuth2Api": {
          "id": "1",
          "name": "Reddit account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "postTitle",
              "value": "={{ $json.title }}"
            },
            {
              "name": "postBody",
              "value": "={{ $json.selftext }}"
            },
            {
              "name": "authorUsername",
              "value": "={{ $json.author }}"
            },
            {
              "name": "postURL",
              "value": "={{ $json.url }}"
            },
            {
              "name": "timestamp",
              "value": "={{ DateTime.fromSeconds($json.created).toISO() }}"
            },
            {
              "name": "subreddit",
              "value": "={{ $json.subreddit }}"
            }
          ],
          "number": [
            {
              "name": "createdTime",
              "value": "={{ $json.created }}"
            }
          ]
        },
        "options": {},
        "keepOnlySet": true
      },
      "id": "f3be9af5-b4ff-4f4e-a726-fc05fab94521",
      "name": "Extract Post Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1080, 320]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.postBody }}",
              "operation": "isNotEmpty"
            }
          ],
          "dateTime": [
            {
              "value1": "={{ $json.timestamp }}",
              "value2": "={{ $today.minus({days: 1}).toISO() }}"
            }
          ]
        }
      },
      "id": "b1dbf78f-c7c6-4ab7-a957-78d58c5e13e3",
      "name": "Filter Recent Posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1280, 320]
    },
    {
      "parameters": {
        "operation": "read",
        "sheetId": "YOUR_SHEET_ID",
        "range": "A:C",
        "options": {}
      },
      "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
      "name": "Check If Already Processed",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [1480, 320],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const sheetData = $node['Check If Already Processed'].json;\nconst existingUrls = sheetData && sheetData.data ? sheetData.data.map(row => row[1]) : [];\n\nconst isDuplicate = existingUrls.includes($json.postURL);\n\nif (isDuplicate) {\n  return null;\n}\n\nreturn $json;"
      },
      "id": "b2c3d4e5-f6a7-8901-2345-678901bcdefg",
      "name": "Filter Duplicates",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1680, 320]
    },
    {
      "parameters": {
        "prompt": "=You are a helpful, empathetic community member responding to a Reddit post.\n\nPost Title: {{ $json.postTitle }}\nPost Content: {{ $json.postBody }}\nAuthor: u/{{ $json.authorUsername }}\n\nGenerate a polite, helpful, and relevant response that:\n- Addresses the author's question or concern\n- Is empathetic and supportive\n- Provides actionable advice if applicable\n- Mentions the author by username naturally\n- Is 2-4 sentences long\n- Avoids being promotional or spammy\n\nResponse:",
        "options": {
          "maxTokens": 200,
          "temperature": 0.7
        }
      },
      "id": "e303a1aa-ee93-4f8f-b834-19aa8da7fe95",
      "name": "Generate AI Response",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1980, 320],
      "credentials": {
        "openAiApi": {
          "id": "3",
          "name": "OpenAI account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition"
      },
      "id": "c3d4e5f6-a7b8-9012-3456-789012cdefgh",
      "name": "Combine Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [2080, 400]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "Post Title",
              "value": "={{ $json.postTitle }}"
            },
            {
              "name": "Post Link",
              "value": "={{ $json.postURL }}"
            },
            {
              "name": "Reddit Username",
              "value": "={{ $json.authorUsername }}"
            },
            {
              "name": "Drafted Response",
              "value": "={{ $json.text || $json.choices[0].text }}"
            },
            {
              "name": "Timestamp",
              "value": "={{ $now.toISO() }}"
            },
            {
              "name": "Subreddit",
              "value": "={{ $json.subreddit }}"
            }
          ]
        },
        "options": {},
        "keepOnlySet": true
      },
      "id": "46280db5-e4b0-4108-958a-763b6410caa0",
      "name": "Format For Sheet",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [2280, 400]
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "YOUR_SHEET_ID",
        "range": "A:F",
        "options": {
          "valueInputMode": "USER_ENTERED"
        }
      },
      "id": "d4e5f6a7-b8c9-0123-4567-890123defghi",
      "name": "Write to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [2580, 400],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Reddit Automation Workflow\n✓ Runs daily at 9:00 AM\n✓ Monitors 14 Indian subreddits\n✓ Tracks keywords: mental health, wellness, career, fitness, workplace\n✓ Filters posts from last 24 hours with content\n✓ Fixed duplicate check using Code node (checks column B of Sheet)\n✓ 2-second delay between OpenAI calls to avoid rate limiting\n✓ Generates AI-powered contextual responses\n✓ Stores: title, link, username, response, timestamp\n✓ Error handler for debugging\n\n**Configure:** Update Sheet ID in Google Sheets nodes",
        "height": 280,
        "width": 507
      },
      "id": "4b560620-a101-4566-b066-4ce3f44d8b0c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [120, 180]
    },
    {
      "parameters": {
        "content": "## Setup Instructions\n1. Reddit OAuth: Add credentials in n8n (client_id, client_secret)\n2. OpenAI: Add API key in credentials (use GPT-3.5-turbo for free tier)\n3. Google Sheets:\n   - Create sheet with headers in row 1:\n     Post Title | Post Link | Reddit Username | Drafted Response | Timestamp | Subreddit\n   - Get Sheet ID from URL: docs.google.com/spreadsheets/d/SHEET_ID/edit\n4. Replace YOUR_SHEET_ID in both Google Sheets nodes\n5. Schedule: Currently set to 9:00 AM daily (modify in Schedule Trigger)\n6. Keywords: Modify in Reddit node if needed\n\n## Fixed Issues:\n✓ Duplicate detection now works (Code node checks column B)\n✓ Daily schedule instead of 2-hourly\n✓ Added 2-second delay to avoid OpenAI rate limits\n✓ Error handler for debugging",
        "height": 220,
        "width": 507
      },
      "id": "e5f6a7b8-c9d0-1234-5678-901234efghij",
      "name": "Configuration Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [120, 480]
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Reddit Multi-Subreddit Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit Multi-Subreddit Search": {
      "main": [
        [
          {
            "node": "Extract Post Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Post Data": {
      "main": [
        [
          {
            "node": "Filter Recent Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Recent Posts": {
      "main": [
        [
          {
            "node": "Filter Duplicates",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check If Already Processed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Already Processed": {
      "main": [
        [
          {
            "node": "Filter Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Duplicates": {
      "main": [
        [
          {
            "node": "Wait 2 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 Seconds": {
      "main": [
        [
          {
            "node": "Generate AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI Response": {
      "main": [
        [
          {
            "node": "Combine Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Data": {
      "main": [
        [
          {
            "node": "Format For Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format For Sheet": {
      "main": [
        [
          {
            "node": "Write to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "1",
  "meta": {
    "instanceId": "cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7"
  },
  "tags": []
}
